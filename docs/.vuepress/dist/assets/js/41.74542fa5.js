(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{622:function(t,a,s){"use strict";s.r(a);var n=s(35),v=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"计算机网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[s("p",[t._v("TCP的三次握手和四次挥手")])]),t._v(" "),s("li",[s("p",[t._v("输入url之后发生的事情以及浏览器渲染原理(DNS解析 HTTP握手 渲染什么的都仔细问了)")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("解析 URL (协议 + 域名 + 数据源文件路径名)；")])]),t._v(" "),s("li",[s("p",[t._v("DNS域名查询，获取 IP 地址；")])]),t._v(" "),s("li",[s("p",[t._v("根据 IP 地址找到服务器，TCP 三次握手进行连接；")])]),t._v(" "),s("li",[s("p",[t._v("发送 HTTP 请求，请求页面资源；")])]),t._v(" "),s("li",[s("p",[t._v("收到 HTTP 响应，获取页面资源；")])]),t._v(" "),s("li",[s("p",[t._v("浏览器是渲染页面：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("解析HTML文件，创建DOM树自上而下，遇到任何 脚本 与 样式都会阻塞 (外部样式不阻塞，后续外部脚本加载)；")])]),t._v(" "),s("li",[s("p",[t._v("解析 CSS 优先级：浏览器默认设置 < 用户设置 < 外部样式 < 内联样式 < HTML中的style 样式；")])]),t._v(" "),s("li",[s("p",[t._v("将 CSS 与 DOM 合并，构建渲染树，DOM树 与 HTML 一 一对应，渲染树会忽略设置了 "),s("code",[t._v("display: none")]),t._v(" 等样式的元素；")])]),t._v(" "),s("li",[s("p",[t._v("布局和绘制，重绘和重排：")])])])])])]),t._v(" "),s("li",[s("p",[t._v("URL里每部分是什么")])]),t._v(" "),s("li",[s("p",[t._v("get和post的区别")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("get的传参方式是通过地址栏url传参，是直接可视的，post传参是将参数放在body内传输；")])]),t._v(" "),s("li",[s("p",[t._v("get因为通过url传输因此大小受到限制，url最大长度为2048个字符，post则无长度限制；")])]),t._v(" "),s("li",[s("p",[t._v("get请求有幂等性，post请求每次提交新数组，并不是安全且幂等的；")])]),t._v(" "),s("li",[s("p",[t._v("get请求可以被缓存，post请求不可以被缓存；")])]),t._v(" "),s("li",[s("p",[t._v("get请求只支持url编码，post请求支持多种编码方式 (application/x-www-form-urlencoded，multipart/form-data，application/json， text/xml)；")])]),t._v(" "),s("li",[s("p",[t._v("get的请求记录会留在浏览器中，post不会；")])]),t._v(" "),s("li",[s("p",[t._v("get只支持ASCII字符，post没有字符类型限制；")])])])]),t._v(" "),s("li",[s("p",[t._v("网络请求的响应状态码：")]),t._v(" "),s("p",[s("img",{attrs:{src:"image-20210715011319577.png",alt:"image-20210715011319577"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("**1xx：**属于提示信息，是协议处理中的⼀种中间状态，实际⽤到的⽐较少。")])]),t._v(" "),s("li",[s("p",[t._v("**2xx：**表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。")]),t._v(" "),s("ul",[s("li",[t._v("「200 OK」是最常⻅的成功状态码，表示⼀切正常。如果是⾮ HEAD 请求，服务器返回的响应头都会有 body 数据。")]),t._v(" "),s("li",[t._v("「204 No Content」也是常⻅的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。")]),t._v(" "),s("li",[t._v("「"),s("strong",[t._v("206 Partial Content")]),t._v("」是应⽤于 HTTP 分块下载或断点续传，表示响应返回的 body 数据并不是资源的全部，⽽是其中的⼀部分，也是服务器处理成功的状态。")])])]),t._v(" "),s("li",[s("p",[t._v("**3xx：**表示客户端请求的资源发送了变动，需要客户端⽤新的 URL 新发送请求获取资源，也就是重定向。")]),t._v(" "),s("ul",[s("li",[t._v("「301 Moved Permanently」表示永久᯿定向，说明请求的资源已经不存在了，需改⽤新的 URL 再次访问。")]),t._v(" "),s("li",[t._v("「302 Found」表示临时定向，说明请求的资源还在，但暂时需要⽤另⼀个 URL 来访问。")])]),t._v(" "),s("p",[t._v("301 和 302 都会在响应头⾥使⽤字段 Location ，指明后续要跳转的 URL，浏览器会⾃动᯿定向新的 URL。")]),t._v(" "),s("ul",[s("li",[t._v("「304 Not Modified」不具有跳转的含义，表示资源未修改，定向已存在的缓冲⽂件，也称缓存定向，⽤于缓存控制。")])])]),t._v(" "),s("li",[s("p",[t._v("**4xx：**表示客户端发送的报⽂有误，服务器⽆法处理，也就是错误码的含义。")]),t._v(" "),s("ul",[s("li",[t._v("「400 Bad Request」表示客户端请求的报⽂有错误，但只是个笼统的错误。")]),t._v(" "),s("li",[t._v("「403 Forbidden」表示服务器禁⽌访问资源，并不是客户端的请求出错。")]),t._v(" "),s("li",[t._v("「404 Not Found」表示请求的资源在服务器上不存在或未找到，所以⽆法提供给客户端。")])])]),t._v(" "),s("li",[s("p",[t._v("**5xx：**表示客户端请求报⽂正确，但是服务器处理时内部发⽣了错误，属于服务器端的错误码。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("「500 Internal Server Error」与 400 类型，是个笼统通⽤的错误码，服务器发⽣了什么错误，我们并不知道。")])]),t._v(" "),s("li",[s("p",[t._v("「501 Not Implemented」表示客户端请求的功能还不⽀持，类似“即将开业，敬请期待”的意思。")])]),t._v(" "),s("li",[s("p",[t._v("「502 Bad Gateway」通常是服务器作为⽹关或代理时返回的错误码，表示服务器⾃身⼯作正常，访问后端服务器发⽣了错误。")])]),t._v(" "),s("li",[s("p",[t._v("「503 Service Unavailable」表示服务器当前很忙，暂时⽆法响应服务器，类似“⽹络服务正忙，请稍后重试”的意思")])])])])])]),t._v(" "),s("li",[s("p",[t._v("304什么意思？也就是要讲讲http 缓存机制")])]),t._v(" "),s("li",[s("p",[t._v("HTTP 1.1/ HTTP 2 .... 区别")])]),t._v(" "),s("li",[s("p",[t._v("http2.0有什么缺点？为什么会有http3.0？")])]),t._v(" "),s("li",[s("p",[t._v("HTTP的理解")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("cookie")]),t._v(" 携带在哪里发送，以及其常见属性")])]),t._v(" "),s("li",[s("p",[t._v("HTTP 常见请求头")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("accept")]),t._v("：浏览器可接受的服务器返回类型")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("accept-encoding")]),t._v("：浏览器声明可接受的编码压缩方法(gzip)；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("accept-language")]),t._v("：浏览器声明自己接收的语言；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("connection")]),t._v("：指定是否使用长连接 (keep-alive)；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("referer")]),t._v("：字段，告诉服务器此请求来自哪个页面链接；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("host")]),t._v("：指定被请求资源所在域名；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("cookie")]),t._v("：用来存储用户信息；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("User-Agent")]),t._v("：客户端使用的操作系统版本以及浏览器的名称和版本；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Cache-Control")]),t._v("：缓存控制")]),t._v(" "),s("p",[s("img",{attrs:{src:"20180921155944100",alt:"img"}})])])])]),t._v(" "),s("li",[s("p",[t._v("HTTP 常见响应头")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("Cache-Control")]),t._v("：对应请求中的Cache-Control")]),t._v(" "),s("p",[s("img",{attrs:{src:"2018092116013247",alt:"在这里插入图片描述"}})])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Last-Modified")]),t._v("：表示所请求的响应对象最后的修改时间；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Etag")]),t._v("：类似于一个html文件的摘要，服务器会将请求收到的 "),s("code",[t._v("Etag")]),t._v("，与响应的 "),s("code",[t._v("Etag")]),t._v(" 进行对比，判断文件是否变化，是否可以继续读取缓存中的页面；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Content-Type")]),t._v("：告诉客户端，资源文件的类型和字符编码类型；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Content-Encoding")]),t._v("：对应 "),s("code",[t._v("Accept-Encoding")]),t._v("，表示编码的压缩方法；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Date")]),t._v("：服务器发送资源时的时间；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Expires")]),t._v("：缓存相关响应头，表示缓存保存的最大时间，但该响应头没有 "),s("code",[t._v("Cache-Control: max-age")]),t._v(" 准确，因为那是相对时间，而该字段只能设置绝对时间；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Connection")]),t._v("：与请求头中 "),s("code",[t._v("Connection")]),t._v(" 对应，也回应 "),s("code",[t._v("keep-alive")]),t._v(";")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Refresh")]),t._v("：用于重定向，返回重定向时间以及重定向网址；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Access-Control-Allow-Origin")]),t._v(" / "),s("code",[t._v("Access-Control-Allow-Methods")]),t._v(" / "),s("code",[t._v("Access-Control-Allow-Credentials")]),t._v("：允许跨域的三个响应头；")])])])]),t._v(" "),s("li",[s("p",[t._v("什么是跨域，如何请求跨域资源？")]),t._v(" "),s("p",[t._v("由于浏览器的同源策略，凡是发送请求 url 的协议，域名，端口三者之间任一与当前页面地址不同即为跨域：")]),t._v(" "),s("ol",[s("li",[t._v("网络协议不同：http 和 https；")]),t._v(" "),s("li",[t._v("端口不同：3000 访问 5000；")]),t._v(" "),s("li",[t._v("域名不同：www.youzan.com 访问 open.weixin.com；")]),t._v(" "),s("li",[t._v("子域名不同：zhifuyun.youzan.com 访问 store.youzan,com；")])]),t._v(" "),s("p",[t._v("实现跨域的方法：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("proxy")]),t._v(" 代理：将请求发送给中间的代理服务器，由代理服务器去转发请求 (因为服务器不存在跨域情况)，请求到的结果也会先发给代理服务器，再由代理服务器提供给当前页面；")]),t._v(" "),s("p",[t._v("在生产环境中，常使用在 "),s("code",[t._v("package.lock.json")]),t._v(" 中配置  "),s("code",[t._v("proxy")]),t._v("(配置单个代理) 或 "),s("code",[t._v("src")]),t._v(" 下创建 "),s("code",[t._v("setupProxy")]),t._v(" (配置多个代理)；")]),t._v(" "),s("p",[t._v("在打包环境中，常用 "),s("code",[t._v("nginx")]),t._v(";")])]),t._v(" "),s("li",[s("p",[t._v("CORS：在后台处理请求时，增加允许跨服的语句；")]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Allow-Origin")])]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Allow-Methods")])]),t._v(" "),s("p",[s("code",[t._v("Access-Control-Allow-Header")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("jsonp")]),t._v("：利用了 "),s("code",[t._v("script")]),t._v(" 标签的 "),s("code",[t._v("src")]),t._v(" 不受浏览器同源策略的影响，允许跨域引用资源的性质进行跨域，当前较为流行，但只支持Get请求；")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 定义一个 回调函数 handleResponse 用来接收返回的数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 动态创建一个 script 标签，并且告诉后端回调函数名叫 handleResponse")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gerElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.laixiangran.cn/json?callback=handleResponse'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbody"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 通过 script.src 请求 `http://www.laixiangran.cn/json?callback=handleResponse`，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 4. 后端能够识别这样的 URL 格式并处理该请求，然后返回 handleResponse({"name": "laixiangran"}) 给浏览器')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 5. 浏览器在接收到 handleResponse({"name": "laixiangran"}) 之后立即执行 ，也就是执行 handleResponse 方法，获得后端返回的数据，这样就完成一次跨域请求了。')]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("document.domain")]),t._v("：解决主域名相同，但子域名不同的情况，适用于 iframe 跨域；")]),t._v(" "),s("p",[t._v("对于主域名相同，而子域名不同的情况，可以使用 document.domain 来跨域。这种方式非常适用于 iframe 跨域的情况。")]),t._v(" "),s("p",[t._v("比如，从地址是 "),s("code",[t._v("http://www.laixiangran.cn/a.html")]),t._v("，访问 src 为 "),s("code",[t._v("http://laixiangran.cn/b.html")]),t._v(" 的 iframe。此时子域不同，无法通过在页面中书写 js 代码来获取 iframe 中的内容。")]),t._v(" "),s("p",[t._v("为了解决只需要将两个页面的 "),s("code",[t._v("document.domain")]),t._v(" 设成相同的域名即可：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("// a.html\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("iframe")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://laixiangran.cn/b.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myIframe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token special-attr"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onload")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token value javascript language-javascript"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'laixiangran.cn'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置成主域")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myIframe'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contentWindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n// b.html\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'laixiangran.cn'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// document.domain 设置成与主页面相同")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v("：document.domain 的设置是有限制的，我们只能把 document.domain 设置成自身或更高一级的父域，且主域必须相同。例如："),s("code",[t._v("a.b.laixiangran.cn")]),t._v(" 中某个文档的 document.domain 可以设成 "),s("code",[t._v("a.b.laixiangran.cn")]),t._v("、"),s("code",[t._v("b.laixiangran.cn")]),t._v(" 、"),s("code",[t._v("laixiangran.cn")]),t._v(" 中的任意一个，但是不可以设成 "),s("code",[t._v("c.a.b.laixiangran.cn")]),t._v(" ，因为这是当前域的子域，也不可以设成 "),s("code",[t._v("baidu.com")]),t._v("，因为主域已经不相同了。")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("socket")]),t._v(" 和 "),s("code",[t._v("webSocket")])]),t._v(" "),s("blockquote",[s("p",[t._v("在网络中的"),s("strong",[t._v("两个进程")]),t._v("需要全双工相互通信 (双方可同时向对方发送消息)，需要用到"),s("code",[t._v("socket")]),t._v("，它能够提供"),s("strong",[t._v("端对端通信")]),t._v("。")]),t._v(" "),s("p",[t._v("程序员只需要在某个应用程序的一端 (eg: 客户端) 创建一个 "),s("code",[t._v("socket")]),t._v(",mkn 实例并且提供它所要连接一端 (eg: 服务端) 的IP地址和端口，而另外一端创建另一个 "),s("code",[t._v("socket")]),t._v(" 并绑定本地端口进行 "),s("code",[t._v("listen")]),t._v("，然后客户端进行 "),s("code",[t._v("connect")]),t._v(" 服务端，服务端接受连接之后双方建立了一个端对端的TCP连接，在该连接上就可以双向通讯了；")]),t._v(" "),s("p",[t._v("一旦建立这个连接之后，通信双方就没有客户端服务端之分了，提供的就是端对端通信了。")]),t._v(" "),s("p",[t._v("从本质上来说，socket并不是一个新的协议，它只是为了便于程序员进行网络编程而对tcp/ip协议族通信机制的一种封装。")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("websocket")]),t._v(" 是 "),s("code",[t._v("html5")]),t._v(" 规范中的一个部分，它借鉴了 "),s("code",[t._v("socket")]),t._v(" 思想，为web应用程序"),s("strong",[t._v("客户端和服务端")]),t._v("之间提供了一种全双工通信机制；")]),t._v(" "),s("p",[t._v("同时，它又是一种新的应用层协议，通常表示为："),s("code",[t._v("ws://echo.websocket.org/?encoding=text HTTP/1.1")]),t._v("，除了协议名和http不同之外，它的表示地址就是传统的url地址；")]),t._v(" "),s("p",[t._v("websocket具有以下几个方面的优势：")]),t._v(" "),s("ol",[s("li",[t._v("建立在 TCP 协议之上，服务器端的实现比较容易；")]),t._v(" "),s("li",[t._v("与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器；")]),t._v(" "),s("li",[t._v("数据格式比较轻量，性能开销小，通信高效；")]),t._v(" "),s("li",[t._v("可以发送文本，也可以发送二进制数据；")]),t._v(" "),s("li",[t._v("没有同源限制，客户端可以与任意服务器通信；")]),t._v(" "),s("li",[t._v("协议标识符是"),s("code",[t._v("ws")]),t._v("（如果加密，则为"),s("code",[t._v("wss")]),t._v("），服务器网址就是 URL；")])]),t._v(" "),s("p",[t._v("webSocket 与 HTTP/2服务器主动推送 的区别：")]),t._v(" "),s("p",[s("strong",[t._v("HTTP/2 引入了 Server Push ，它使服务器能够主动地将资源推送到客户端缓存。但是，它并不允许将数据推送到客户端应用程序本身")]),t._v("。服务器推送只能由浏览器处理，不会在应用程序代码中弹出服务器数据，这意味着应用程序没有 API 来获取这些事件的通知；")]),t._v(" "),s("p",[t._v("而 webSocket 是全双工通信，将数据推送到客户端本身；")])])]),t._v(" "),s("li",[s("p",[t._v("TCP 和 UDP的区别")]),t._v(" "),s("ol",[s("li",[t._v("TCP面向连接（如打电话要先拨号建立连接）;UDP是无连接的，即发送数据之前不需要建立连接")]),t._v(" "),s("li",[t._v("TCP提供可靠的服务。也就是说，通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达;UDP尽最大努力交付，即不保证可靠交付；")]),t._v(" "),s("li",[t._v("TCP的逻辑通信信道是全双工的可靠信道，UDP则是不可靠信道；")]),t._v(" "),s("li",[t._v("TCP面向字节流，实际上是TCP把数据看成一连串无结构的字节流;UDP是面向报文的，UDP没有拥塞控制，因此网络出现拥塞不会使源主机的发送速率降低（对实时应用很有用，如IP电话，实时视频会议等）")]),t._v(" "),s("li",[t._v("每一条TCP连接只能是点到点的;UDP支持一对一，一对多，多对一和多对多的交互通信；")]),t._v(" "),s("li",[t._v("TCP首部开销20字节，UDP的首部开销小，只有8个字节；")])])]),t._v(" "),s("li",[s("p",[t._v("前端安全问题：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("XSS (跨站脚本攻击)：")]),t._v(" "),s("blockquote",[s("p",[t._v("html 或 js 脚本攻击，恶意攻击者向 "),s("code",[t._v("Web")]),t._v(" 页面中插入恶意代码 (一般会在 a 标签或者 img 标签前插入一些 html 或 js 脚本)，当用户浏览网页时，这些恶意代码会被执行从而达到恶意攻击用户的目的；")]),t._v(" "),s("p",[t._v("通常是通过 php 输出函数将 js 代码输出到 html 页面中，通过用户本地浏览器执行；")]),t._v(" "),s("p",[t._v("预防 XSS 攻击：")]),t._v(" "),s("p",[t._v("1、前端替换关键字，如替换"),s("code",[t._v("<")]),t._v("为"),s("code",[t._v("<")]),t._v(" "),s("code",[t._v(">")]),t._v(" 为"),s("code",[t._v(">")]),t._v("\n2、后台替换。\n3、任何内容写到页面之前都必须加以encode，避免不小心把html tag 弄出来。")])])]),t._v(" "),s("li",[s("p",[t._v("CSRF (跨站请求伪造)：")]),t._v(" "),s("blockquote",[s("p",[t._v("CSRF也称为跨站请求伪造，其实就是对网站中的一些表单提交行为被黑客利用。例如在登陆 A 网站时存在 cookie 中的一些个人信息，而在退出登录之前，无意点击访问黑客的网站时，黑客网站收到用户的页面请求后，返回一些攻击性代码，并发出请求 (提交url) 求用户访问 A 网站，浏览器在接收到攻击性代码后，就根据黑客网站的请求，在用户不知情的情况下，携带用户的 cookie 信息，向 A 网站发出请求；而 A 网站并不知道请求是由黑客网站发起的，因此会根据恶意请求进行操作；")]),t._v(" "),s("p",[t._v("预防 CSRF 攻击：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("验证 HTTP Referer：")]),t._v(" "),s("p",[t._v("在 HTTP 头部中有 Referer 字段，记录了 HTTP 请求的来源地址，但若黑客要对网站进行攻击，只能在自己的网站构造请求，因此当 A网站发现 Referer 不是规定网站的话，就会拒绝该请求；")])]),t._v(" "),s("li",[s("p",[t._v("在请求地址中添加 token 并验证：")]),t._v(" "),s("p",[t._v("CSRF 攻击在于黑客网站能完全伪造请求，在传统的 Session 请求中的所有用户验证信息，都是存在 cookie 中，因此黑客可以在不知道验证信息的情况下直接利用用户自己的 cookie 通过安全验证；因此可以在请求中放入黑客不能伪造的信息，且该信息不存在于 cookie 中；")]),t._v(" "),s("p",[t._v("此时就可以在 HTTP 请求中以参数的形式加入一个随机产生的 token，并在服务端建立拦截器来验证该 token，如果请求中没有 token 或者内容不正确，则拒绝请求；")])]),t._v(" "),s("li",[s("p",[t._v("在 HTTP 投中自定义属性并进行验证：")]),t._v(" "),s("p",[t._v("同样是使用 token 进行验证，但是把 token 放在 HTTP 请求头的自定义属性中；")])])])])]),t._v(" "),s("li",[s("p",[t._v("本地存储数据问题：一些个人信息不经加密就存储在本地或cookie中是极度不安全的，这会导致信息十分容易被盗用；")])]),t._v(" "),s("li",[s("p",[t._v("HTTPS加密传输数据：")]),t._v(" "),s("blockquote",[s("p",[t._v("在浏览器对服务器访问或者请求的过程中，会经过很多的协议或者步骤，当其中某一步被拦截时，若没有被加密就极易被盗取；")]),t._v(" "),s("p",[t._v("HTTPS中间人攻击：")]),t._v(" "),s("ol",[s("li",[t._v("服务器向客户端发送公钥，攻击者截获公钥，保留在自己手上，然后攻击者自己生成一个【伪造的】公钥，发给客户端。")]),t._v(" "),s("li",[t._v("客户端收到伪造的公钥后，生成加密hash值发给服务器，攻击者获得加密hash值，用自己的私钥解密获得真秘钥，同时生成假的加密hash值，发给服务器；")]),t._v(" "),s("li",[t._v("服务器用私钥解密获得假秘钥，服务器假秘钥加密传输信息；")])]),t._v(" "),s("p",[t._v("此时如果使用了数字证书，将服务器的公钥放入数字证书中再发送给客户端。则浏览器可以通过自身内置的CA的公钥验证数字证书的真实性；")])])]),t._v(" "),s("li",[s("p",[t._v("SQL注入")]),t._v(" "),s("blockquote",[s("p",[t._v("通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令")]),t._v(" "),s("p",[t._v("预防 SQL 注入的方法：")]),t._v(" "),s("ul",[s("li",[t._v('永远不要信任用户的输入，要对用户的输入进行校验，可以通过正则表达式，或限制长度，对单引号和双"-"进行转换等。')]),t._v(" "),s("li",[t._v("永远不要使用动态拼装SQL，可以使用参数化的SQL或者直接使用存储过程进行数据查询存取。")]),t._v(" "),s("li",[t._v("永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。")]),t._v(" "),s("li",[t._v("不要把机密信息明文存放，请加密或者hash掉密码和敏感的信息。")])])])])]),t._v(" "),s("ul",[s("li",[t._v("CSRF 与 XSS区别：\n"),s("ul",[s("li",[t._v("XSS是向页面注入js去运行，然后在js函数体中做他想做的事情。\nCSRF是利用网站漏洞，自动执行接口。用户需要登陆网站。")]),t._v(" "),s("li",[t._v("XSS是获取信息，不需要提前知道其他用户页面的代码和数据包。\nCSRF是代替用户完成指定的动作，需要知道其他用户页面的代码和数据包。")])])])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);