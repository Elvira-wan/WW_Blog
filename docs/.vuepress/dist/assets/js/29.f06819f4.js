(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{592:function(t,s,a){"use strict";a.r(s);var e=a(35),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("正则表达式写法")])]),t._v(" "),a("ul",[a("li",[t._v('var 变量 = new RegExp(" ");')]),t._v(" "),a("li",[t._v("var 变量 = / /")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" patt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"e"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//验证字符串里有没有e，显式定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" patt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//意义同上，隐式定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcdf"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("patt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//验证字符串方法test")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("正则表达式方法")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("test：检测是否匹配正则表达式模式")]),t._v(" "),a("li",[t._v("match：在字符串内检所指定的值，找打一个或多个正则表达式")]),t._v(" "),a("li",[t._v("exec：返回字符串数组")])]),t._v(" "),a("p",[a("u",[t._v("注释：sreach和replace常用正则表达式搜索字符串中字符")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("正则表达式基本用法")])]),t._v(" "),a("ul",[a("li",[t._v("i：执行对大小写不敏感匹配")]),t._v(" "),a("li",[t._v("g：执行全局匹配，查找所有而非在找到第一个后停止")]),t._v(" "),a("li",[t._v("^：以什么开头")]),t._v(" "),a("li",[t._v("$：以什么结尾")]),t._v(" "),a("li",[t._v("[a-zA-Z]：可以包含的字母")]),t._v(" "),a("li",[t._v("[0-9]：匹配数字")]),t._v(" "),a("li",[t._v("{n,m}：至少匹配n次，至多匹配m次")]),t._v(" "),a("li",[t._v("*：零次或多次匹配前面的字符或者子表达式，等效于{0,}")]),t._v(" "),a("li",[t._v("+：一次或多次匹配前面的字符或者子表达式，等效于{1,}")]),t._v(" "),a("li",[t._v("?：零次或一次匹配到前面的字符或者子表达式")]),t._v(" "),a("li",[t._v("()：分组")]),t._v(" "),a("li",[t._v("\\b：单词边界")]),t._v(" "),a("li",[t._v("\\d：查找数字")]),t._v(" "),a("li",[t._v("\\s：查找空白字符")]),t._v(" "),a("li",[t._v("\\w：查找单词字符")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);